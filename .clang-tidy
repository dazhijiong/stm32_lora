# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# Modified from the Apache Arrow project for the Terrier project.
#
---
Checks:     '
            bugprone-*,
            clang-analyzer-*,
            google-*,
            modernize-*,
            performance-*,
            portability-*,
            readability-*,
            -bugprone-branch-clone,
            -bugprone-easily-swappable-parameters,
            -bugprone-implicit-widening-of-multiplication-result,
            -bugprone-narrowing-conversions,
            -bugprone-reserved-identifier,
            -bugprone-signed-char-misuse,
            -bugprone-suspicious-include,
            -bugprone-too-small-loop-variable,
            -bugprone-unhandled-self-assignment,
            -bugprone-branch-clone,
            -bugprone-signed-char-misuse,
            -bugprone-unhandled-self-assignment,
            -clang-analyzer-cplusplus.NewDelete,
            -clang-analyzer-cplusplus.NewDeleteLeaks,
            -clang-diagnostic-implicit-int-float-conversion,
            -modernize-avoid-c-arrays,
            -modernize-use-nodiscard,
            -modernize-use-auto,
            -modernize-avoid-c-arrays,
            -modernize-use-default-member-init,
            -modernize-use-trailing-return-type,
            -modernize-return-braced-init-list,
            -readability-convert-member-functions-to-static,
            -readability-identifier-length,
            -readability-function-cognitive-complexity,
            -readability-magic-numbers,
            -readability-make-member-function-const,
            -readability-qualified-auto,
            -readability-redundant-access-specifiers,
            -clang-diagnostic-int-to-pointer-cast,
            -clang-diagnostic-pointer-to-int-cast,
            -performance-no-int-to-ptr,
            -modernize-deprecated-headers,
            -google-readability-casting,
            -google-readability-todo,
            -readability-implicit-bool-conversion,
            -modernize-use-using,
            -readability-uppercase-literal-suffix
            '
FormatStyle: google
HeaderFilterRegex: 'Core/Inc'
AnalyzeTemporaryDtors: true

#### Disabled checks and why: #####
#
# -bugprone-too-small-loop-variable,
#     Complains about uint8_t or uint16_t when the limit on the loop is a container's .size() (size_t).
#     We usually do this when we know the maximum size of the container though, so propose leaving disabled.
# -clang-analyzer-cplusplus.NewDelete,
#     Seems to generate false positives. Suggest relying on ASAN and valgrind for memory stuff.
# -clang-analyzer-cplusplus.NewDeleteLeaks,
#     Seems to generate false positives. Suggest relying on ASAN and valgrind for memory stuff.
# -modernize-use-nodiscard,
#     New C++17 feature, slightly polarizing. Would clutter codebase.
# -readability-magic-numbers,
#     Let's not deal with people doing ridiculous things to hack around this. If it bites them, it bites them.
